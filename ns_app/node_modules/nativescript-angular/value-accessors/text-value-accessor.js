Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var forms_1 = require("@angular/forms");
var base_value_accessor_1 = require("./base-value-accessor");
var TEXT_VALUE_ACCESSOR = {
    provide: forms_1.NG_VALUE_ACCESSOR,
    useExisting: core_1.forwardRef(function () { return TextValueAccessor; }),
    multi: true,
};
/**
 * The accessor for writing a text and listening to changes that is used by the
 * {@link NgModel} directives.
 *
 *  ### Example
 *  ```
 *  <TextField [(ngModel)]="model.test">
 *  ```
 */
var TextValueAccessor = (function (_super) {
    __extends(TextValueAccessor, _super);
    function TextValueAccessor(elementRef) {
        return _super.call(this, elementRef.nativeElement) || this;
    }
    TextValueAccessor.prototype.writeValue = function (value) {
        this.view.text = value;
    };
    return TextValueAccessor;
}(base_value_accessor_1.BaseValueAccessor));
TextValueAccessor = __decorate([
    core_1.Directive({
        selector: "TextField[ngModel],TextField[formControlName]," +
            "textField[ngModel],textField[formControlName]," +
            "textfield[ngModel],textfield[formControlName]," +
            "text-field[ngModel],text-field[formControlName]," +
            "TextView[ngModel],TextView[formControlName]," +
            "textView[ngModel],textView[formControlName]," +
            "textview[ngModel],textview[formControlName]," +
            "text-view[ngModel],text-view[formControlName]," +
            "SearchBar[ngModel],SearchBar[formControlName]," +
            "searchBar[ngModel],searchBar[formControlName]," +
            "searchbar[ngModel],searchbar[formControlName]," +
            "search-bar[ngModel], search-bar[formControlName]",
        providers: [TEXT_VALUE_ACCESSOR],
        host: {
            "(touch)": "onTouched()",
            "(textChange)": "onChange($event.value)",
        },
    }),
    __metadata("design:paramtypes", [core_1.ElementRef])
], TextValueAccessor);
exports.TextValueAccessor = TextValueAccessor;
//# sourceMappingURL=text-value-accessor.js.map